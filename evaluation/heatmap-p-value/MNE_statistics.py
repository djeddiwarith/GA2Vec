import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import matplotlib.patches as mpatches


data_align = {
    "Approaches": [
        "GenAlign2Vec-ANCPRBT",
"GenAlign2Vec-ANCESM",
"GenAlign2Vec-ANCT5",
"MONACO",
"SMETANA",
        # "SMETANA",
        "BEAMS",
        "multiMAGNA++",
        "HubAlign",
"IsoRankN"
    ],
    "4932-9606-10090": [1.936, 1.966, 1.915, 1.586, 1.670, 1.893, 2.660, np.nan,
            3.230],
    "4932-6239-7227": [1.364, 1.347,1.344,  1.238, 1.329, 1.162, 1.968, np.nan,
            1.499],
"10spec": [1.857, 1.855, 1.861, 1.805, 1.847,np.nan, 2.822, np.nan, np.nan],
"8spec": [1.851, 1.881, 1.852, 1.796, 1.839, np.nan, 2.827, np.nan,2.092],
"5spec": [1.863, 1.878, 1.887, 1.753, 1.843, 1.862, 2.766, np.nan,2.044],
    "562-3702": [1.499, 1.487, 1.480, 1.245, 1.158, 0.953, 1.488, 1.147, 1.579],  # Transformed MNE values
"562-4896": [1.307, 1.295, 1.306, 1.120, 1.132, 0.997, 1.540, 1.566, 1.490],
"562-10116": [2.679, 2.631, 2.631, 2.631, 2.389, 1.294, 2.653, 2.802, 2.539],
"562-39947": [1.12, 1.05, 1.08, 1.074, 1.07, 1.028, 1.624, 1.562, np.nan],
"3702-4896": [2.691, 1.015, 1.031, 0.705, 0.792, 1.848, 1.361, 1.315, 1.291],
"3702-10116": [3.741, 3.238, 3.669, 2.365, 3.801, 2.706, 1.505, 1.332, 2.915],
"3702-39947": [0.58, 0.550, 0.407, 0.330, 0.331, 0.168, np.nan, 1.419, 0.429],
"4896-10116": [2.909, 2.981, 2.843, 0.330, 2.794, 1.346, 2.704, 2.567, 2.903],
"4896-39947": [1.270, 1.226, 1.473, 0.330, 2.794, 0.895, 1.480, 1.581, 1.408],
"4932-562": [1.260, 1.260, 1.237, 1.117, 1.125, 1.057, 1.649, 1.693, 1.621],
"4932-3702": [1.335, 1.321, 1.341, 1.017, 1.149, 0.419, 1.504, 1.087, 1.724],
"4932-4896": [1.091, 1.085, 1.078, 0.937, 0.928, 0.968, 1.504, 1.684, 1.157],
    "4932-9606": [1.757,1.750, 1.766, 0.937,1.617, 1.704, 2.060, 2.117, 1.577],
    "4932-10090": [2.961, 3.016, 3.043, 1.921, 2.744, 1.555, 2.757,  2.117, 2.326],
"4932-10116": [3.012, 2.875, 2.932, 2.708, 2.759, 1.179, 2.761, 2.669, 2.532],
"4932-39947": [1.810, 1.966, 1.807, 1.785, 1.849, 1.054, 1.583, 1.507, 1.844],
"6239-562": [1.249, 1.256, 1.289, 1.146, 1.126, 0.983, 1.559, 1.690, 1.563],
    "6239-3702": [1.376, 1.360, 1.388, 1.014, 1.126, 0.825, 1.442, 1.108, 1.327],
"6239-4896": [1.270, 1.275, 1.296, 1.148, 1.126, 0.917, 1.569, 1.603, 1.322],
"6239-4932": [1.270, 1.379, 1.377, 1.128, 1.126, 1.007, 1.696, 1.478, 1.365],
"6239-9606": [1.958, 1.942, 1.979, 1.728, 1.746, 0.170, 1.992, 1.998, 1.960],
    "6239-10090": [2.884, 2.924, 2.821, 2.223, 2.584, 0.725, 2.654, 2.753, 2.797],
"6239-10116": [1.955, 1.869, 1.531, 1.408, 1/1.440, 1/0.919, np.nan, 0, np.nan],
    "6239-39947": [1.727, 1.690, 1.638, 1.418, 1.468, 0.919, 1.585, 1.544, 1.493],
    "7227-562": [1.311, 1.317, 1.342, 1.742, 1.171, 1.293, 1.698, 1.756, 1.528],
"7227-3702": [1.700, 1.707, 1.721, 1.430, 1.628, 1.295, np.nan, 1.594, 1.561],
    "7227-4896": [1.422, 1.398, 1.413, 1.312, 1.304, 1.259, 1.664, 1.594, 1.253],
    "7227-4932": [1.401, 1.405, 1.397, 1.238, 1.295, 1.186, 1.786, 1.834, 1.332],
"7227-6239": [1.294, 1.282, 1.291, 1.098, 1.193, 1.082, 1.786, 1.768, 1.251],
    "7227-9606": [1.796, 1.793,  1.762, 1.640, 1.647, 1.694, 2.085, 1.768, 1.781],
    "7227-10090": [2.876, 2.779, 2.757, 2.073, 1.574, 1.824, 2.779, 2.761, 2.092],
    "7227-10116": [2.892, 3.199, 3.138, 2.859, 2.789, 1.478, 2.809, 2.777, 2.536],
"7227-39947": [2.247, 2.394, 2.191, 1.878, 2.272, 1.379, 1.550, np.nan, 2.536],
"9606-562": [1.822, 1.822, 1.865, 1.639, 1.642, 1.862, 1.978, 2.064, 1.950],
    "9606-3702": [2.710, 2.636, 2.735,2.508, 2.861, 1.945, 1.783, 1.816, 1.950],
    "9606-4896": [2.039, 2.026, 2.05, 1.755, 1.619, 1.862, 1.924, 1.816, 1.538],
    "9606-10090": [2.620, 2.548, 2.563, 1.613, 1.619, 1.533, 2.961, 1.816, 1.851],
"9606-10116": [3.414, 3.329, 3.287, 2.602, 2.791, 1.963, 3.016, 3.071, 1.775],
"9606-39947": [3.459, 3.444, 3.187, 3.02, 3.131, 1.956, 3.016, 1.758, 2.188],
"10090-562": [2.494, 2.496, 2.516, 2.367, 2.350, 2.040, 3.016, 2.682, 3.026],
"10090-3702": [3.950, 3.944, 3.839, 3.321, 3.430, 2.838, 1.783, 2.756, 3.291],
"10090-4896": [3.305, 3.403, 3.273, 2.857, 2.806, 2.157, np.nan, 2.805, 2.768],
"10090-10116": [4.391, 4.915, 4.781, 3.0, 3.202, 2.744, 3.636, 3.504, 3.108],
    "10090-39947": [5.599, 5.471, 5.096, 5.331,5.840, 2.872, 2.613, 2.599,  3.203],
"10116-39947": [4.171, 4.973, 3.662, 3.160, 3.357, 2.780, 2.399, 2.581, 3.225],
"SARS2SARS1": [1.523, 1.161, 1.305, 1.312, 1.312,1.404, 2.142, 2.09, 0.180],
"hmSARS2hmSARS1": [2.599, 2.605, 2.618, 2.057, 1.359, 2.350, 2.478, 2.516, np.nan],

}

# Create DataFrame
df = pd.DataFrame(data_align)
df.set_index("Approaches", inplace=True)

# Transpose the DataFrame to make approaches columns and datasets as rows
df_transposed = df.T

# Plotting line plot
plt.figure(figsize=(12, 8))

for column in df_transposed.columns:
    plt.plot(df_transposed.index, df_transposed[column], marker='o', label=column)

plt.title("Line Plot of MNE Values for Global Network Aligners")
plt.xlabel("Datasets")
plt.ylabel("MNE Value")
plt.legend(title="Approaches")
plt.grid(True)
plt.xticks(rotation=45, ha='right')
plt.subplots_adjust(bottom=0.25)  # Adjust the bottom margin to increase space for x-axis labels

plt.savefig("lineplot-MNE-values.eps")